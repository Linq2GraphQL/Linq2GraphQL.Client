//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;

namespace StartGG.Client;

[JsonConverter(typeof(GraphInputConverter<TeamPaginationFilter>))]
public partial class TeamPaginationFilter : GraphInputBase
{
	[GraphQLMember("globalTeamId")]
	[JsonPropertyName("globalTeamId")]
	public ID GlobalTeamId 
	{
		get => GetValue<ID>("globalTeamId");
    	set => SetValue("globalTeamId", value);
	}

	[GraphQLMember("eventState")]
	[JsonPropertyName("eventState")]
	public ActivityState? EventState 
	{
		get => GetValue<ActivityState?>("eventState");
    	set => SetValue("eventState", value);
	}

	[GraphQLMember("eventId")]
	[JsonPropertyName("eventId")]
	public ID EventId 
	{
		get => GetValue<ID>("eventId");
    	set => SetValue("eventId", value);
	}

	[GraphQLMember("eventIds")]
	[JsonPropertyName("eventIds")]
	public List<ID> EventIds 
	{
		get => GetValue<List<ID>>("eventIds");
    	set => SetValue("eventIds", value);
	}

	[GraphQLMember("minEntrantCount")]
	[JsonPropertyName("minEntrantCount")]
	public int? MinEntrantCount 
	{
		get => GetValue<int?>("minEntrantCount");
    	set => SetValue("minEntrantCount", value);
	}

	[GraphQLMember("maxEntrantCount")]
	[JsonPropertyName("maxEntrantCount")]
	public int? MaxEntrantCount 
	{
		get => GetValue<int?>("maxEntrantCount");
    	set => SetValue("maxEntrantCount", value);
	}

	[GraphQLMember("search")]
	[JsonPropertyName("search")]
	public PaginationSearchType Search 
	{
		get => GetValue<PaginationSearchType>("search");
    	set => SetValue("search", value);
	}

	[GraphQLMember("type")]
	[JsonPropertyName("type")]
	public int? Type 
	{
		get => GetValue<int?>("type");
    	set => SetValue("type", value);
	}

	[GraphQLMember("tournamentId")]
	[JsonPropertyName("tournamentId")]
	public ID TournamentId 
	{
		get => GetValue<ID>("tournamentId");
    	set => SetValue("tournamentId", value);
	}

	[GraphQLMember("memberStatus")]
	[JsonPropertyName("memberStatus")]
	public List<TeamMemberStatus?> MemberStatus 
	{
		get => GetValue<List<TeamMemberStatus?>>("memberStatus");
    	set => SetValue("memberStatus", value);
	}

	[GraphQLMember("videogameId")]
	[JsonPropertyName("videogameId")]
	public List<ID> VideogameId 
	{
		get => GetValue<List<ID>>("videogameId");
    	set => SetValue("videogameId", value);
	}

	[GraphQLMember("isLeague")]
	[JsonPropertyName("isLeague")]
	public bool? IsLeague 
	{
		get => GetValue<bool?>("isLeague");
    	set => SetValue("isLeague", value);
	}

	[GraphQLMember("upcoming")]
	[JsonPropertyName("upcoming")]
	public bool? Upcoming 
	{
		get => GetValue<bool?>("upcoming");
    	set => SetValue("upcoming", value);
	}

	[GraphQLMember("past")]
	[JsonPropertyName("past")]
	public bool? Past 
	{
		get => GetValue<bool?>("past");
    	set => SetValue("past", value);
	}

	[GraphQLMember("rosterComplete")]
	[JsonPropertyName("rosterComplete")]
	public bool? RosterComplete 
	{
		get => GetValue<bool?>("rosterComplete");
    	set => SetValue("rosterComplete", value);
	}

	[GraphQLMember("rosterIncomplete")]
	[JsonPropertyName("rosterIncomplete")]
	public bool? RosterIncomplete 
	{
		get => GetValue<bool?>("rosterIncomplete");
    	set => SetValue("rosterIncomplete", value);
	}

}