//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Converters;

namespace StartGG.Client;

public static class TeamExtentions
{


    [GraphInterface]
    public static EventTeam EventTeam(this Team value)
    {
        if (value.__TypeName == "EventTeam")
        {
            return (EventTeam)value;
        }
        return null;
    }

    [GraphInterface]
    public static GlobalTeam GlobalTeam(this Team value)
    {
        if (value.__TypeName == "GlobalTeam")
        {
            return (GlobalTeam)value;
        }
        return null;
    }
}


internal class TeamConverter : InterfaceJsonConverter<Team>
{
    public override Team Deserialize(string typeName, JsonObject json) => typeName switch
    {
          "EventTeam" => json.Deserialize<EventTeam>(),
      "GlobalTeam" => json.Deserialize<GlobalTeam>(),
        _ => json.Deserialize< Team__Concrete>()
    };
}




[JsonConverter(typeof(TeamConverter))]
public interface Team 
{
	[GraphQLMember("id")]
	public ID Id { get; set; }  
	[GraphQLMember("discriminator")]
	public string Discriminator { get; set; }  
	[GraphQLMember("images")]
	public List<Image> Images { get;  }  
	[GraphQLMember("members")]
	public List<TeamMember> Members { get;  }  
	[GraphQLMember("name")]
	public string Name { get; set; }  
    [GraphQLMember("__typename")]
    public string __TypeName { get; set; }

}

internal class Team__Concrete : Team
{
	[GraphQLMember("id")]
	public ID Id { get; set; }  
	[GraphQLMember("discriminator")]
	public string Discriminator { get; set; }  
	[GraphQLMember("images")]
	public List<Image> Images { get; set; }  
	[GraphQLMember("members")]
	public List<TeamMember> Members { get; set; }  
	[GraphQLMember("name")]
	public string Name { get; set; }  

    [GraphQLMember("__typename")]
    public string __TypeName { get; set; }

}