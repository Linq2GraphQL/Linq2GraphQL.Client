//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StartGG.Client;


public static class SetExtensions
{
    [GraphQLMember("displayScore")]
    public static string DisplayScore(this Set  set, [GraphQLArgument("mainEntrantId", "ID")] ID mainEntrantId = null)
    {
        return set.GetMethodValue<string>("displayScore", mainEntrantId);
    }

    [GraphQLMember("game")]
    public static Game Game(this Set  set, [GraphQLArgument("orderNum", "Int!")] int orderNum)
    {
        return set.GetMethodValue<Game>("game", orderNum);
    }

    [GraphQLMember("images")]
    public static List<Image> Images(this Set  set, [GraphQLArgument("type", "String")] string type = null)
    {
        return set.GetMethodValue<List<Image>>("images", type);
    }

    [GraphQLMember("slots")]
    public static List<SetSlot> Slots(this Set  set, [GraphQLArgument("includeByes", "Boolean")] bool? includeByes = null)
    {
        return set.GetMethodValue<List<SetSlot>>("slots", includeByes);
    }

}

/// <summary>
/// A set
/// </summary>
public partial class Set : GraphQLTypeBase
{
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public ID Id { get; set; }

    /// <summary>
    /// The time this set was marked as completed
    /// </summary>
    [GraphQLMember("completedAt")]
    [JsonPropertyName("completedAt")]
    public Timestamp CompletedAt { get; set; }

    /// <summary>
    /// The time this set was created
    /// </summary>
    [GraphQLMember("createdAt")]
    [JsonPropertyName("createdAt")]
    public Timestamp CreatedAt { get; set; }

    private LazyProperty<string> _displayScore = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public string DisplayScore => _displayScore.Value(() => GetFirstMethodValue<string>("displayScore"));

    /// <summary>
    /// Event that this set belongs to.
    /// </summary>
    [GraphQLMember("event")]
    [JsonPropertyName("event")]
    public Event Event { get; set; }

    /// <summary>
    /// Full round text of this set.
    /// </summary>
    [GraphQLMember("fullRoundText")]
    [JsonPropertyName("fullRoundText")]
    public string FullRoundText { get; set; }

    private LazyProperty<Game> _game = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public Game Game => _game.Value(() => GetFirstMethodValue<Game>("game"));

    [GraphQLMember("games")]
    [JsonPropertyName("games")]
    public List<Game> Games { get; set; }

    /// <summary>
    /// Whether this set contains a placeholder entrant
    /// </summary>
    [GraphQLMember("hasPlaceholder")]
    [JsonPropertyName("hasPlaceholder")]
    public bool? HasPlaceholder { get; set; }

    /// <summary>
    /// The letters that describe a unique identifier within the pool. Eg. F, AT
    /// </summary>
    [GraphQLMember("identifier")]
    [JsonPropertyName("identifier")]
    public string Identifier { get; set; }

    private LazyProperty<List<Image>> _images = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Image> Images => _images.Value(() => GetFirstMethodValue<List<Image>>("images"));

    [GraphQLMember("lPlacement")]
    [JsonPropertyName("lPlacement")]
    public int? LPlacement { get; set; }

    /// <summary>
    /// Phase group that this Set belongs to.
    /// </summary>
    [GraphQLMember("phaseGroup")]
    [JsonPropertyName("phaseGroup")]
    public PhaseGroup PhaseGroup { get; set; }

    /// <summary>
    /// The sets that are affected from resetting this set
    /// </summary>
    [GraphQLMember("resetAffectedData")]
    [JsonPropertyName("resetAffectedData")]
    public ResetAffectedData ResetAffectedData { get; set; }

    /// <summary>
    /// The round number of the set. Negative numbers are losers bracket
    /// </summary>
    [GraphQLMember("round")]
    [JsonPropertyName("round")]
    public int? Round { get; set; }

    /// <summary>
    /// Indicates whether the set is in best of or total games mode. This instructs
/// which field is used to figure out how many games are in this set.
    /// </summary>
    [GraphQLMember("setGamesType")]
    [JsonPropertyName("setGamesType")]
    public int? SetGamesType { get; set; }

    private LazyProperty<List<SetSlot>> _slots = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<SetSlot> Slots => _slots.Value(() => GetFirstMethodValue<List<SetSlot>>("slots"));

    /// <summary>
    /// The start time of the Set. If there is no startAt time on the Set, will pull it from phaseGroup rounds configuration.
    /// </summary>
    [GraphQLMember("startAt")]
    [JsonPropertyName("startAt")]
    public Timestamp StartAt { get; set; }

    [GraphQLMember("startedAt")]
    [JsonPropertyName("startedAt")]
    public Timestamp StartedAt { get; set; }

    [GraphQLMember("state")]
    [JsonPropertyName("state")]
    public int? State { get; set; }

    /// <summary>
    /// Tournament event station for a set
    /// </summary>
    [GraphQLMember("station")]
    [JsonPropertyName("station")]
    public Stations Station { get; set; }

    /// <summary>
    /// Tournament event stream for a set
    /// </summary>
    [GraphQLMember("stream")]
    [JsonPropertyName("stream")]
    public Streams Stream { get; set; }

    /// <summary>
    /// If setGamesType is in total games mode, this defined the number of games in the set.
    /// </summary>
    [GraphQLMember("totalGames")]
    [JsonPropertyName("totalGames")]
    public int? TotalGames { get; set; }

    /// <summary>
    /// Url of a VOD for this set
    /// </summary>
    [GraphQLMember("vodUrl")]
    [JsonPropertyName("vodUrl")]
    public string VodUrl { get; set; }

    [GraphQLMember("wPlacement")]
    [JsonPropertyName("wPlacement")]
    public int? WPlacement { get; set; }

    [GraphQLMember("winnerId")]
    [JsonPropertyName("winnerId")]
    public int? WinnerId { get; set; }

}
