//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StartGG.Client;


public static class SeedExtensions
{
    [GraphQLMember("setRecordWithoutByes")]
    public static JSON SetRecordWithoutByes(this Seed  seed, [GraphQLArgument("phaseGroupId", "ID!")] ID phaseGroupId)
    {
        return seed.GetMethodValue<JSON>("setRecordWithoutByes", phaseGroupId);
    }

    [GraphQLMember("standings")]
    public static List<Standing> Standings(this Seed  seed, [GraphQLArgument("containerType", "String")] string containerType = null)
    {
        return seed.GetMethodValue<List<Standing>>("standings", containerType);
    }

}

/// <summary>
/// A seed for an entrant
/// </summary>
public partial class Seed : GraphQLTypeBase
{
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public ID Id { get; set; }

    /// <summary>
    /// Map of Participant ID to checked in boolean
    /// </summary>
    [GraphQLMember("checkedInParticipants")]
    [JsonPropertyName("checkedInParticipants")]
    public JSON CheckedInParticipants { get; set; }

    [GraphQLMember("entrant")]
    [JsonPropertyName("entrant")]
    public Entrant Entrant { get; set; }

    [GraphQLMember("groupSeedNum")]
    [JsonPropertyName("groupSeedNum")]
    public int? GroupSeedNum { get; set; }

    [GraphQLMember("isBye")]
    [JsonPropertyName("isBye")]
    public bool? IsBye { get; set; }

    [GraphQLMember("phase")]
    [JsonPropertyName("phase")]
    public Phase Phase { get; set; }

    [GraphQLMember("phaseGroup")]
    [JsonPropertyName("phaseGroup")]
    public PhaseGroup PhaseGroup { get; set; }

    [GraphQLMember("placeholderName")]
    [JsonPropertyName("placeholderName")]
    public string PlaceholderName { get; set; }

    [GraphQLMember("placement")]
    [JsonPropertyName("placement")]
    public int? Placement { get; set; }

    /// <summary>
    /// The player(s) associated with this seed's entrant
    /// </summary>
    [GraphQLMember("players")]
    [JsonPropertyName("players")]
    public List<Player> Players { get; set; }

    [GraphQLMember("progressionSeedId")]
    [JsonPropertyName("progressionSeedId")]
    public int? ProgressionSeedId { get; set; }

    /// <summary>
    /// Source progression information
    /// </summary>
    [GraphQLMember("progressionSource")]
    [JsonPropertyName("progressionSource")]
    public Progression ProgressionSource { get; set; }

    [GraphQLMember("seedNum")]
    [JsonPropertyName("seedNum")]
    public int? SeedNum { get; set; }

    private LazyProperty<JSON> _setRecordWithoutByes = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public JSON SetRecordWithoutByes => _setRecordWithoutByes.Value(() => GetFirstMethodValue<JSON>("setRecordWithoutByes"));

    private LazyProperty<List<Standing>> _standings = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Standing> Standings => _standings.Value(() => GetFirstMethodValue<List<Standing>>("standings"));

}
