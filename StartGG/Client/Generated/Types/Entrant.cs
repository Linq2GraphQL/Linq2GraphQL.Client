//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StartGG.Client;


public static class EntrantExtensions
{
    [GraphQLMember("paginatedSets")]
    public static SetConnection PaginatedSets(this Entrant  entrant, [GraphQLArgument("page", "Int")] int? page = null, [GraphQLArgument("perPage", "Int")] int? perPage = null, [GraphQLArgument("sortType", "SetSortType")] SetSortType? sortType = null, [GraphQLArgument("filters", "SetFilters")] SetFilters filters = null)
    {
        return entrant.GetMethodValue<SetConnection>("paginatedSets", page, perPage, sortType, filters);
    }

}

/// <summary>
/// An entrant in an event
/// </summary>
public partial class Entrant : GraphQLTypeBase
{
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public ID Id { get; set; }

    [GraphQLMember("event")]
    [JsonPropertyName("event")]
    public Event Event { get; set; }

    /// <summary>
    /// Entrant's seed number in the first phase of the event.
    /// </summary>
    [GraphQLMember("initialSeedNum")]
    [JsonPropertyName("initialSeedNum")]
    public int? InitialSeedNum { get; set; }

    [GraphQLMember("isDisqualified")]
    [JsonPropertyName("isDisqualified")]
    public bool? IsDisqualified { get; set; }

    /// <summary>
    /// The entrant name as it appears in bracket: gamerTag of the participant or team name
    /// </summary>
    [GraphQLMember("name")]
    [JsonPropertyName("name")]
    public string Name { get; set; }

    private LazyProperty<SetConnection> _paginatedSets = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public SetConnection PaginatedSets => _paginatedSets.Value(() => GetFirstMethodValue<SetConnection>("paginatedSets"));

    [GraphQLMember("participants")]
    [JsonPropertyName("participants")]
    public List<Participant> Participants { get; set; }

    [GraphQLMember("seeds")]
    [JsonPropertyName("seeds")]
    public List<Seed> Seeds { get; set; }

    [GraphQLMember("skill")]
    [JsonPropertyName("skill")]
    public int? Skill { get; set; }

    /// <summary>
    /// Standing for this entrant given an event. All entrants queried must be in the same event (for now).
    /// </summary>
    [GraphQLMember("standing")]
    [JsonPropertyName("standing")]
    public Standing Standing { get; set; }

    [GraphQLMember("streams")]
    [JsonPropertyName("streams")]
    public List<Streams> Streams { get; set; }

    /// <summary>
    /// Team linked to this entrant, if one exists
    /// </summary>
    [GraphQLMember("team")]
    [JsonPropertyName("team")]
    public Team Team { get; set; }

}
