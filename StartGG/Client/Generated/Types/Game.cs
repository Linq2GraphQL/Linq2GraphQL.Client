//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StartGG.Client;


public static class GameExtensions
{
    [GraphQLMember("images")]
    public static List<Image> Images(this Game  game, [GraphQLArgument("type", "String")] string type = null)
    {
        return game.GetMethodValue<List<Image>>("images", type);
    }

}

/// <summary>
/// A game represents a single game within a set.
/// </summary>
public partial class Game : GraphQLTypeBase
{
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public ID Id { get; set; }

    /// <summary>
    /// Score of entrant 1. For smash, this is equivalent to stocks remaining.
    /// </summary>
    [GraphQLMember("entrant1Score")]
    [JsonPropertyName("entrant1Score")]
    public int? Entrant1Score { get; set; }

    /// <summary>
    /// Score of entrant 2. For smash, this is equivalent to stocks remaining.
    /// </summary>
    [GraphQLMember("entrant2Score")]
    [JsonPropertyName("entrant2Score")]
    public int? Entrant2Score { get; set; }

    private LazyProperty<List<Image>> _images = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public List<Image> Images => _images.Value(() => GetFirstMethodValue<List<Image>>("images"));

    [GraphQLMember("orderNum")]
    [JsonPropertyName("orderNum")]
    public int? OrderNum { get; set; }

    /// <summary>
    /// Selections for this game such as character, etc.
    /// </summary>
    [GraphQLMember("selections")]
    [JsonPropertyName("selections")]
    public List<GameSelection> Selections { get; set; }

    /// <summary>
    /// The stage that this game was played on (if applicable)
    /// </summary>
    [GraphQLMember("stage")]
    [JsonPropertyName("stage")]
    public Stage Stage { get; set; }

    [GraphQLMember("state")]
    [JsonPropertyName("state")]
    public int? State { get; set; }

    [GraphQLMember("winnerId")]
    [JsonPropertyName("winnerId")]
    public int? WinnerId { get; set; }

}
