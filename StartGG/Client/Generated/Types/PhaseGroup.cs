//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StartGG.Client;


public static class PhaseGroupExtensions
{
    [GraphQLMember("seeds")]
    public static SeedConnection Seeds(this PhaseGroup  phaseGroup, [GraphQLArgument("query", "SeedPaginationQuery!")] SeedPaginationQuery query, [GraphQLArgument("eventId", "ID")] ID eventId = null)
    {
        return phaseGroup.GetMethodValue<SeedConnection>("seeds", query, eventId);
    }

    [GraphQLMember("sets")]
    public static SetConnection Sets(this PhaseGroup  phaseGroup, [GraphQLArgument("page", "Int")] int? page = null, [GraphQLArgument("perPage", "Int")] int? perPage = null, [GraphQLArgument("sortType", "SetSortType")] SetSortType? sortType = null, [GraphQLArgument("filters", "SetFilters")] SetFilters filters = null)
    {
        return phaseGroup.GetMethodValue<SetConnection>("sets", page, perPage, sortType, filters);
    }

    [GraphQLMember("standings")]
    public static StandingConnection Standings(this PhaseGroup  phaseGroup, [GraphQLArgument("query", "StandingGroupStandingPageFilter")] StandingGroupStandingPageFilter query = null)
    {
        return phaseGroup.GetMethodValue<StandingConnection>("standings", query);
    }

}

/// <summary>
/// A group within a phase
/// </summary>
public partial class PhaseGroup : GraphQLTypeBase
{
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public ID Id { get; set; }

    /// <summary>
    /// The bracket type of this group's phase.
    /// </summary>
    [GraphQLMember("bracketType")]
    [JsonPropertyName("bracketType")]
    public BracketType? BracketType { get; set; }

    /// <summary>
    /// URL for this phase groups's bracket.
    /// </summary>
    [GraphQLMember("bracketUrl")]
    [JsonPropertyName("bracketUrl")]
    public string BracketUrl { get; set; }

    /// <summary>
    /// Unique identifier for this group within the context of its phase
    /// </summary>
    [GraphQLMember("displayIdentifier")]
    [JsonPropertyName("displayIdentifier")]
    public string DisplayIdentifier { get; set; }

    /// <summary>
    /// For the given phase group, this is the start time of the first round that occurs in the group.
    /// </summary>
    [GraphQLMember("firstRoundTime")]
    [JsonPropertyName("firstRoundTime")]
    public Timestamp FirstRoundTime { get; set; }

    [GraphQLMember("numRounds")]
    [JsonPropertyName("numRounds")]
    public int? NumRounds { get; set; }

    /// <summary>
    /// The phase associated with this phase group
    /// </summary>
    [GraphQLMember("phase")]
    [JsonPropertyName("phase")]
    public Phase Phase { get; set; }

    /// <summary>
    /// The progressions out of this phase group
    /// </summary>
    [GraphQLMember("progressionsOut")]
    [JsonPropertyName("progressionsOut")]
    public List<Progression> ProgressionsOut { get; set; }

    [GraphQLMember("rounds")]
    [JsonPropertyName("rounds")]
    public List<Round> Rounds { get; set; }

    [GraphQLMember("seedMap")]
    [JsonPropertyName("seedMap")]
    public JSON SeedMap { get; set; }

    private LazyProperty<SeedConnection> _seeds = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public SeedConnection Seeds => _seeds.Value(() => GetFirstMethodValue<SeedConnection>("seeds"));

    private LazyProperty<SetConnection> _sets = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public SetConnection Sets => _sets.Value(() => GetFirstMethodValue<SetConnection>("sets"));

    private LazyProperty<StandingConnection> _standings = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public StandingConnection Standings => _standings.Value(() => GetFirstMethodValue<StandingConnection>("standings"));

    /// <summary>
    /// Unix time the group is scheduled to start. This info could also be on the wave instead.
    /// </summary>
    [GraphQLMember("startAt")]
    [JsonPropertyName("startAt")]
    public Timestamp StartAt { get; set; }

    [GraphQLMember("state")]
    [JsonPropertyName("state")]
    public int? State { get; set; }

    [GraphQLMember("tiebreakOrder")]
    [JsonPropertyName("tiebreakOrder")]
    public JSON TiebreakOrder { get; set; }

    [GraphQLMember("wave")]
    [JsonPropertyName("wave")]
    public Wave Wave { get; set; }

}
