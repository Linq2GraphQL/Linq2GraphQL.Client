<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Converters;

namespace <#= namespaceName #>;

[JsonConverter(typeof(InterfaceConverter<<#= GetInterfaceConcreteName() #>,  <#= classType.Name #>>))]
public interface <#= classType.Name #> <#= classType.GetInterfacesString() #>
{
<#
    foreach (var field in classType.AllFields)
    {
        var fieldInfo = field.FieldInfo;
#>
	[JsonPropertyName("<#= field.Name #>")]
	public <#= fieldInfo.CSharpTypeNameFull #> <#= field.CSharpName #> { get; set; }  
<#
    }
#>
    [JsonPropertyName("__typename")]
    public string __TypeName { get; set; }

}

internal class <#= GetInterfaceConcreteName() #> : <#= classType.Name #>
{
<#
    foreach (var field in classType.AllFields)
    {
        var fieldInfo = field.FieldInfo;
#>
	[JsonPropertyName("<#= field.Name #>")]
	public <#= fieldInfo.CSharpTypeNameFull #> <#= field.CSharpName #> { get; set; }  
<#
    }
#>

    [JsonPropertyName("__typename")]
    public string __TypeName { get; set; }

}