//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StarWars.Client;


public static class VehicleExtensions
{
    [GraphQLMember("pilotConnection")]
    public static VehiclePilotsConnection PilotConnection(this Vehicle  vehicle, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return vehicle.GetMethodValue<VehiclePilotsConnection>("pilotConnection", after, first, before, last);
    }

    [GraphQLMember("filmConnection")]
    public static VehicleFilmsConnection FilmConnection(this Vehicle  vehicle, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return vehicle.GetMethodValue<VehicleFilmsConnection>("filmConnection", after, first, before, last);
    }

}

/// <summary>
/// A single transport craft that does not have hyperdrive capability
/// </summary>
public partial class Vehicle : GraphQLTypeBase, Node
{
    /// <summary>
    /// The name of this vehicle. The common name, such as "Sand Crawler" or "Speeder
/// bike".
    /// </summary>
    [GraphQLMember("name")]
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// The model or official name of this vehicle. Such as "All-Terrain Attack
/// Transport".
    /// </summary>
    [GraphQLMember("model")]
    [JsonPropertyName("model")]
    public string Model { get; set; }

    /// <summary>
    /// The class of this vehicle, such as "Wheeled" or "Repulsorcraft".
    /// </summary>
    [GraphQLMember("vehicleClass")]
    [JsonPropertyName("vehicleClass")]
    public string VehicleClass { get; set; }

    /// <summary>
    /// The manufacturers of this vehicle.
    /// </summary>
    [GraphQLMember("manufacturers")]
    [JsonPropertyName("manufacturers")]
    public List<string> Manufacturers { get; set; }

    /// <summary>
    /// The cost of this vehicle new, in Galactic Credits.
    /// </summary>
    [GraphQLMember("costInCredits")]
    [JsonPropertyName("costInCredits")]
    public double? CostInCredits { get; set; }

    /// <summary>
    /// The length of this vehicle in meters.
    /// </summary>
    [GraphQLMember("length")]
    [JsonPropertyName("length")]
    public double? Length { get; set; }

    /// <summary>
    /// The number of personnel needed to run or pilot this vehicle.
    /// </summary>
    [GraphQLMember("crew")]
    [JsonPropertyName("crew")]
    public string Crew { get; set; }

    /// <summary>
    /// The number of non-essential people this vehicle can transport.
    /// </summary>
    [GraphQLMember("passengers")]
    [JsonPropertyName("passengers")]
    public string Passengers { get; set; }

    /// <summary>
    /// The maximum speed of this vehicle in atmosphere.
    /// </summary>
    [GraphQLMember("maxAtmospheringSpeed")]
    [JsonPropertyName("maxAtmospheringSpeed")]
    public int? MaxAtmospheringSpeed { get; set; }

    /// <summary>
    /// The maximum number of kilograms that this vehicle can transport.
    /// </summary>
    [GraphQLMember("cargoCapacity")]
    [JsonPropertyName("cargoCapacity")]
    public double? CargoCapacity { get; set; }

    /// <summary>
    /// The maximum length of time that this vehicle can provide consumables for its
/// entire crew without having to resupply.
    /// </summary>
    [GraphQLMember("consumables")]
    [JsonPropertyName("consumables")]
    public string Consumables { get; set; }

    private LazyProperty<VehiclePilotsConnection> _pilotConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public VehiclePilotsConnection PilotConnection => _pilotConnection.Value(() => GetFirstMethodValue<VehiclePilotsConnection>("pilotConnection"));

    private LazyProperty<VehicleFilmsConnection> _filmConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public VehicleFilmsConnection FilmConnection => _filmConnection.Value(() => GetFirstMethodValue<VehicleFilmsConnection>("filmConnection"));

    /// <summary>
    /// The ISO 8601 date format of the time that this resource was created.
    /// </summary>
    [GraphQLMember("created")]
    [JsonPropertyName("created")]
    public string Created { get; set; }

    /// <summary>
    /// The ISO 8601 date format of the time that this resource was edited.
    /// </summary>
    [GraphQLMember("edited")]
    [JsonPropertyName("edited")]
    public string Edited { get; set; }

    /// <summary>
    /// The ID of an object
    /// </summary>
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public string Id { get; set; }

    [GraphQLMember("__typename")]
    [JsonPropertyName("__typename")]
    public string __TypeName { get; set; }
}
