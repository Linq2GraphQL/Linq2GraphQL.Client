//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StarWars.Client;


public static class FilmExtensions
{
    [GraphQLMember("speciesConnection")]
    public static FilmSpeciesConnection SpeciesConnection(this Film  film, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return film.GetMethodValue<FilmSpeciesConnection>("speciesConnection", after, first, before, last);
    }

    [GraphQLMember("starshipConnection")]
    public static FilmStarshipsConnection StarshipConnection(this Film  film, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return film.GetMethodValue<FilmStarshipsConnection>("starshipConnection", after, first, before, last);
    }

    [GraphQLMember("vehicleConnection")]
    public static FilmVehiclesConnection VehicleConnection(this Film  film, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return film.GetMethodValue<FilmVehiclesConnection>("vehicleConnection", after, first, before, last);
    }

    [GraphQLMember("characterConnection")]
    public static FilmCharactersConnection CharacterConnection(this Film  film, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return film.GetMethodValue<FilmCharactersConnection>("characterConnection", after, first, before, last);
    }

    [GraphQLMember("planetConnection")]
    public static FilmPlanetsConnection PlanetConnection(this Film  film, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return film.GetMethodValue<FilmPlanetsConnection>("planetConnection", after, first, before, last);
    }

}

/// <summary>
/// A single film.
/// </summary>
public partial class Film : GraphQLTypeBase, Node
{
    /// <summary>
    /// The title of this film.
    /// </summary>
    [GraphQLMember("title")]
    [JsonPropertyName("title")]
    public string Title { get; set; }

    /// <summary>
    /// The episode number of this film.
    /// </summary>
    [GraphQLMember("episodeID")]
    [JsonPropertyName("episodeID")]
    public int? EpisodeID { get; set; }

    /// <summary>
    /// The opening paragraphs at the beginning of this film.
    /// </summary>
    [GraphQLMember("openingCrawl")]
    [JsonPropertyName("openingCrawl")]
    public string OpeningCrawl { get; set; }

    /// <summary>
    /// The name of the director of this film.
    /// </summary>
    [GraphQLMember("director")]
    [JsonPropertyName("director")]
    public string Director { get; set; }

    /// <summary>
    /// The name(s) of the producer(s) of this film.
    /// </summary>
    [GraphQLMember("producers")]
    [JsonPropertyName("producers")]
    public List<string> Producers { get; set; }

    /// <summary>
    /// The ISO 8601 date format of film release at original creator country.
    /// </summary>
    [GraphQLMember("releaseDate")]
    [JsonPropertyName("releaseDate")]
    public string ReleaseDate { get; set; }

    private LazyProperty<FilmSpeciesConnection> _speciesConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public FilmSpeciesConnection SpeciesConnection => _speciesConnection.Value(() => GetFirstMethodValue<FilmSpeciesConnection>("speciesConnection"));

    private LazyProperty<FilmStarshipsConnection> _starshipConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public FilmStarshipsConnection StarshipConnection => _starshipConnection.Value(() => GetFirstMethodValue<FilmStarshipsConnection>("starshipConnection"));

    private LazyProperty<FilmVehiclesConnection> _vehicleConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public FilmVehiclesConnection VehicleConnection => _vehicleConnection.Value(() => GetFirstMethodValue<FilmVehiclesConnection>("vehicleConnection"));

    private LazyProperty<FilmCharactersConnection> _characterConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public FilmCharactersConnection CharacterConnection => _characterConnection.Value(() => GetFirstMethodValue<FilmCharactersConnection>("characterConnection"));

    private LazyProperty<FilmPlanetsConnection> _planetConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public FilmPlanetsConnection PlanetConnection => _planetConnection.Value(() => GetFirstMethodValue<FilmPlanetsConnection>("planetConnection"));

    /// <summary>
    /// The ISO 8601 date format of the time that this resource was created.
    /// </summary>
    [GraphQLMember("created")]
    [JsonPropertyName("created")]
    public string Created { get; set; }

    /// <summary>
    /// The ISO 8601 date format of the time that this resource was edited.
    /// </summary>
    [GraphQLMember("edited")]
    [JsonPropertyName("edited")]
    public string Edited { get; set; }

    /// <summary>
    /// The ID of an object
    /// </summary>
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public string Id { get; set; }

    [GraphQLMember("__typename")]
    [JsonPropertyName("__typename")]
    public string __TypeName { get; set; }
}
