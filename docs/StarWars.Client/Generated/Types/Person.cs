//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace StarWars.Client;


public static class PersonExtensions
{
    [GraphQLMember("filmConnection")]
    public static PersonFilmsConnection FilmConnection(this Person  person, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return person.GetMethodValue<PersonFilmsConnection>("filmConnection", after, first, before, last);
    }

    [GraphQLMember("starshipConnection")]
    public static PersonStarshipsConnection StarshipConnection(this Person  person, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return person.GetMethodValue<PersonStarshipsConnection>("starshipConnection", after, first, before, last);
    }

    [GraphQLMember("vehicleConnection")]
    public static PersonVehiclesConnection VehicleConnection(this Person  person, [GraphQLArgument("after", "String")] string after = null, [GraphQLArgument("first", "Int")] int? first = null, [GraphQLArgument("before", "String")] string before = null, [GraphQLArgument("last", "Int")] int? last = null)
    {
        return person.GetMethodValue<PersonVehiclesConnection>("vehicleConnection", after, first, before, last);
    }

}

/// <summary>
/// An individual person or character within the Star Wars universe.
/// </summary>
public partial class Person : GraphQLTypeBase, Node
{
    /// <summary>
    /// The name of this person.
    /// </summary>
    [GraphQLMember("name")]
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// The birth year of the person, using the in-universe standard of BBY or ABY -
/// Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is
/// a battle that occurs at the end of Star Wars episode IV: A New Hope.
    /// </summary>
    [GraphQLMember("birthYear")]
    [JsonPropertyName("birthYear")]
    public string BirthYear { get; set; }

    /// <summary>
    /// The eye color of this person. Will be "unknown" if not known or "n/a" if the
/// person does not have an eye.
    /// </summary>
    [GraphQLMember("eyeColor")]
    [JsonPropertyName("eyeColor")]
    public string EyeColor { get; set; }

    /// <summary>
    /// The gender of this person. Either "Male", "Female" or "unknown",
/// "n/a" if the person does not have a gender.
    /// </summary>
    [GraphQLMember("gender")]
    [JsonPropertyName("gender")]
    public string Gender { get; set; }

    /// <summary>
    /// The hair color of this person. Will be "unknown" if not known or "n/a" if the
/// person does not have hair.
    /// </summary>
    [GraphQLMember("hairColor")]
    [JsonPropertyName("hairColor")]
    public string HairColor { get; set; }

    /// <summary>
    /// The height of the person in centimeters.
    /// </summary>
    [GraphQLMember("height")]
    [JsonPropertyName("height")]
    public int? Height { get; set; }

    /// <summary>
    /// The mass of the person in kilograms.
    /// </summary>
    [GraphQLMember("mass")]
    [JsonPropertyName("mass")]
    public double? Mass { get; set; }

    /// <summary>
    /// The skin color of this person.
    /// </summary>
    [GraphQLMember("skinColor")]
    [JsonPropertyName("skinColor")]
    public string SkinColor { get; set; }

    /// <summary>
    /// A planet that this person was born on or inhabits.
    /// </summary>
    [GraphQLMember("homeworld")]
    [JsonPropertyName("homeworld")]
    public Planet Homeworld { get; set; }

    private LazyProperty<PersonFilmsConnection> _filmConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public PersonFilmsConnection FilmConnection => _filmConnection.Value(() => GetFirstMethodValue<PersonFilmsConnection>("filmConnection"));

    /// <summary>
    /// The species that this person belongs to, or null if unknown.
    /// </summary>
    [GraphQLMember("species")]
    [JsonPropertyName("species")]
    public Species Species { get; set; }

    private LazyProperty<PersonStarshipsConnection> _starshipConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public PersonStarshipsConnection StarshipConnection => _starshipConnection.Value(() => GetFirstMethodValue<PersonStarshipsConnection>("starshipConnection"));

    private LazyProperty<PersonVehiclesConnection> _vehicleConnection = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public PersonVehiclesConnection VehicleConnection => _vehicleConnection.Value(() => GetFirstMethodValue<PersonVehiclesConnection>("vehicleConnection"));

    /// <summary>
    /// The ISO 8601 date format of the time that this resource was created.
    /// </summary>
    [GraphQLMember("created")]
    [JsonPropertyName("created")]
    public string Created { get; set; }

    /// <summary>
    /// The ISO 8601 date format of the time that this resource was edited.
    /// </summary>
    [GraphQLMember("edited")]
    [JsonPropertyName("edited")]
    public string Edited { get; set; }

    /// <summary>
    /// The ID of an object
    /// </summary>
    [GraphQLMember("id")]
    [JsonPropertyName("id")]
    public string Id { get; set; }

    [GraphQLMember("__typename")]
    [JsonPropertyName("__typename")]
    public string __TypeName { get; set; }
}
