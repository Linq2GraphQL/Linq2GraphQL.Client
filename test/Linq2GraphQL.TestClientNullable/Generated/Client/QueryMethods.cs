//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System.Collections.Generic;
using System;
using Linq2GraphQL.Client;

namespace Linq2GraphQL.TestClientNullable;

public class QueryMethods
{
    private readonly GraphClient client;

    public QueryMethods(GraphClient client)
    {
        this.client = client;
    }

    public GraphQuery<Item> Item()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<Item>(client,  "item", OperationType.Query, arguments); 
    }

    [Obsolete("This is an really old method! please d not use it!!")]
    public GraphQuery<Item> ItemDraft()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<Item>(client,  "itemDraft", OperationType.Query, arguments); 
    }

    public GraphQuery<List<Customer>> CustomerList()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<List<Customer>>(client,  "customerList", OperationType.Query, arguments); 
    }

    public GraphQuery<Customer?> CustomerNullable()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<Customer?>(client,  "customerNullable", OperationType.Query, arguments); 
    }

    public GraphQuery<List<Customer?>?> CustomerListAllNullable()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<List<Customer?>?>(client,  "customerListAllNullable", OperationType.Query, arguments); 
    }

    public GraphQuery<List<Customer>?> CustomerListNullable()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<List<Customer>?>(client,  "customerListNullable", OperationType.Query, arguments); 
    }

    public GraphQuery<List<List<Customer>>> CustomerListInList()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<List<List<Customer>>>(client,  "customerListInList", OperationType.Query, arguments); 
    }

    public GraphQuery<Person> Person()
    {
	    var arguments = new List<ArgumentValue>
        {
        };

        return new GraphQuery<Person>(client,  "person", OperationType.Query, arguments); 
    }

    }
