//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;

namespace Linq2GraphQL.TestClient;

[JsonConverter(typeof(GraphInputConverter<ByteOperationFilterInput>))]
public partial class ByteOperationFilterInput : GraphInputBase
{
	[GraphQLMember("eq")]
	public byte? Eq 
	{
		get => GetValue<byte?>("eq");
    	set => SetValue("eq", value);
	}

	[GraphQLMember("neq")]
	public byte? Neq 
	{
		get => GetValue<byte?>("neq");
    	set => SetValue("neq", value);
	}

	[GraphQLMember("in")]
	public List<byte?> In 
	{
		get => GetValue<List<byte?>>("in");
    	set => SetValue("in", value);
	}

	[GraphQLMember("nin")]
	public List<byte?> Nin 
	{
		get => GetValue<List<byte?>>("nin");
    	set => SetValue("nin", value);
	}

	[GraphQLMember("gt")]
	public byte? Gt 
	{
		get => GetValue<byte?>("gt");
    	set => SetValue("gt", value);
	}

	[GraphQLMember("ngt")]
	public byte? Ngt 
	{
		get => GetValue<byte?>("ngt");
    	set => SetValue("ngt", value);
	}

	[GraphQLMember("gte")]
	public byte? Gte 
	{
		get => GetValue<byte?>("gte");
    	set => SetValue("gte", value);
	}

	[GraphQLMember("ngte")]
	public byte? Ngte 
	{
		get => GetValue<byte?>("ngte");
    	set => SetValue("ngte", value);
	}

	[GraphQLMember("lt")]
	public byte? Lt 
	{
		get => GetValue<byte?>("lt");
    	set => SetValue("lt", value);
	}

	[GraphQLMember("nlt")]
	public byte? Nlt 
	{
		get => GetValue<byte?>("nlt");
    	set => SetValue("nlt", value);
	}

	[GraphQLMember("lte")]
	public byte? Lte 
	{
		get => GetValue<byte?>("lte");
    	set => SetValue("lte", value);
	}

	[GraphQLMember("nlte")]
	public byte? Nlte 
	{
		get => GetValue<byte?>("nlte");
    	set => SetValue("nlte", value);
	}

}