//---------------------------------------------------------------------
// This code was automatically generated by Linq2GraphQL
// Please don't edit this file
// Github:https://github.com/linq2graphql/linq2graphql.client
// Url: https://linq2graphql.com
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using Linq2GraphQL.Client;
using Linq2GraphQL.Client.Common;

namespace Linq2GraphQL.TestClient;


public static class OrderExtensions
{
    [GraphQLMember("orderHello")]
    public static string OrderHello(this Order  order, [GraphQLArgument("name", "String!")] string name, [GraphQLArgument("first", "Int!")] int first)
    {
        return order.GetMethodValue<string>("orderHello", name, first);
    }

    [GraphQLMember("orderAddress")]
    public static Address OrderAddress(this Order  order, [GraphQLArgument("addressType", "AddressType!")] AddressType addressType)
    {
        return order.GetMethodValue<Address>("orderAddress", addressType);
    }

}

public partial class Order : GraphQLTypeBase
{
    private LazyProperty<string> _orderHello = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public string OrderHello => _orderHello.Value(() => GetFirstMethodValue<string>("orderHello"));

    private LazyProperty<Address> _orderAddress = new();
    /// <summary>
    /// Do not use in Query, only to retrive result
    /// </summary>
    public Address OrderAddress => _orderAddress.Value(() => GetFirstMethodValue<Address>("orderAddress"));

    [GraphQLMember("orderId")]
    [JsonPropertyName("orderId")]
    public Guid OrderId { get; set; }

    [GraphQLMember("customer")]
    [JsonPropertyName("customer")]
    public Customer Customer { get; set; }

    [GraphQLMember("address")]
    [JsonPropertyName("address")]
    public Address Address { get; set; }

    [GraphQLMember("orderDate")]
    [JsonPropertyName("orderDate")]
    public DateTimeOffset OrderDate { get; set; }

    [GraphQLMember("lines")]
    [JsonPropertyName("lines")]
    public List<OrderLine> Lines { get; set; }

    [GraphQLMember("entryTime")]
    [JsonPropertyName("entryTime")]
    public TimeSpan? EntryTime { get; set; }

}
